% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/meta_data.R
\name{meta_data<-}
\alias{meta_data<-}
\title{Assign Metadata to Data Frame Columns}
\usage{
meta_data(x) <- value
}
\arguments{
\item{x}{A data frame or tibble.}

\item{value}{A \strong{named list} (where each element corresponds to a column and contains a list of metadata)
or a \strong{data frame} (with at least \code{"Datafield"} and \code{"Description"} columns).}
}
\value{
The modified data frame \code{x} with metadata attributes assigned to columns.
The function returns \code{x} invisibly to avoid unnecessary printing.
}
\description{
\ifelse{html}{\href{https://lifecycle.r-lib.org/articles/stages.html#experimental}{\figure{lifecycle-experimental.svg}{options: alt='[Experimental]'}}}{\strong{[Experimental]}}

The assignment function \verb{meta_data<-()} sets metadata attributes for data frame columns.
Metadata can be provided as a \strong{named list} or a \strong{data frame}.
\itemize{
\item If a \strong{named list} is provided, each element corresponds to a column name,
with a sublist containing metadata fields.
\item If a \strong{data frame} is provided, it must contain a \code{"Datafield"} column
(defining the target column names) and a \code{"Description"} column.
Additional columns are treated as metadata fields.
}

Metadata is stored as attributes prefixed with \code{"meta_"}, e.g., \code{"meta_Description"},
\code{"meta_Unit"}, \code{"meta_Symbol"}.
}
\examples{
# Example using the mtcars dataset
data(mtcars)

# Assign metadata using a named list
meta_data(mtcars) <- list(
  mpg = list(Description = "Miles per US gallon", Unit = "mpg"),
  cyl = list(Description = "Number of cylinders", Unit = "count"),
  disp = list(Description = "Engine displacement in cubic inches", Unit = "cu.in.")
)

# Assign metadata using a data frame
meta_data(mtcars) <- data.frame(
  Datafield = c("mpg", "cyl", "disp"),
  Description = c(
    "Miles per US gallon",
    "Number of cylinders",
    "Engine displacement in cubic inches"
    ),
  Unit = c("mpg", "count", "cu.in.")
)

# Retrieve metadata
show_meta_data(mtcars)

}
